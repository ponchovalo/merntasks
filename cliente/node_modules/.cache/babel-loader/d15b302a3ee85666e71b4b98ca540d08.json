{"ast":null,"code":"var _jsxFileName = \"C:\\\\CURSOS\\\\MERN\\\\MERNTasks\\\\cliente\\\\src\\\\context\\\\autenticacion\\\\authState.js\";\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/token';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from '../../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); // Funciones\n\n  const registrarUsuario = async datos => {\n    try {\n      const respuesta = await clienteAxios.post('/api/usuarios', datos); // console.log(respuesta);\n\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      }); // Obtener el usuario\n\n      usuarioAutenticado();\n    } catch (error) {\n      // console.log(error.response.data.msg);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // Retorno el usuario autenticado\n\n\n  const usuarioAutenticado = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      // TODO: Funcion para enviar el token por headers\n      tokenAuth(token);\n    }\n\n    try {\n      const respuesta = await clienteAxios.get('/api/auth'); // console.log(respuesta)\n\n      dispatch({\n        type: OBTENER_USUARIO,\n        payload: respuesta.data.usuario\n      });\n    } catch (error) {\n      console.log(error.response);\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  }; // cuando el usuario inicia sesion\n\n\n  const iniciarSesion = async datos => {\n    try {\n      const respuesta = await clienteAxios.post('/api/auth', datos);\n      console.log(respuesta);\n    } catch (error) {\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      registrarUsuario,\n      iniciarSesion\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/CURSOS/MERN/MERNTasks/cliente/src/context/autenticacion/authState.js"],"names":["React","useReducer","AuthContext","AuthReducer","clienteAxios","tokenAuth","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","state","dispatch","registrarUsuario","datos","respuesta","post","type","payload","data","usuarioAutenticado","error","alerta","msg","response","categoria","get","console","log","iniciarSesion","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\n\r\nimport clienteAxios from '../../config/axios'\r\nimport tokenAuth from '../../config/token'\r\n\r\nimport { REGISTRO_EXITOSO, \r\n    REGISTRO_ERROR, \r\n    OBTENER_USUARIO, \r\n    LOGIN_EXITOSO, \r\n    LOGIN_ERROR, \r\n    CERRAR_SESION \r\n} from '../../types';\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n    \r\n    // Funciones\r\n    const registrarUsuario = async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/usuarios', datos);\r\n            \r\n            // console.log(respuesta);\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: respuesta.data\r\n            })\r\n\r\n            // Obtener el usuario\r\n            usuarioAutenticado();\r\n        } catch (error) {\r\n            // console.log(error.response.data.msg);\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria:'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    // Retorno el usuario autenticado\r\n    const usuarioAutenticado = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if(token) {\r\n            // TODO: Funcion para enviar el token por headers\r\n            tokenAuth(token)\r\n        }\r\n\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/auth');\r\n            // console.log(respuesta)\r\n            dispatch({\r\n                type: OBTENER_USUARIO,\r\n                payload: respuesta.data.usuario\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response)\r\n            dispatch({\r\n                type: LOGIN_ERROR\r\n            })\r\n        }\r\n    }\r\n\r\n    // cuando el usuario inicia sesion\r\n    const iniciarSesion = async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/auth', datos);\r\n            console.log(respuesta)\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                registrarUsuario,\r\n                iniciarSesion\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}